SSB  18.9.15

C:\ Arduino projects\CmdMessenger\CmdMessenger\CSharp\CmdMessenger.sln
C:\ Arduino projects\CmdMessenger\CmdMessenger\Examples\Data Logging\DataLogging.sln  bzw. DataLogging.sln

D O N E
- Datalogging ein-/ausschalten
- Temperatur plotten
		LM35 TempSensor view from flat side, left to right
						1=4-20V     >>  Yell   27  5V
						2=OUT		>>  green  19  A 7 (oder 0 ?)
						3=GND		>>  blue   29  GND

- Timer1 in Controler starten/stoppen und auslesen
-    Timer Test 15 Stunden:  OK


Analog In 7:   Über Spannungsteiler: VIn > 33k > A7 > 10k > GND 
				12V > 2.7 V  am A7
				5V  > 0.9 V  am A7


- PID calculations  Im Prinzip OK.  PI Werte mit endgültiger Hardware anpassen

- PWM on D3 (Pin 4 GND  Pin 6 D3)

PT1000 Konverter Anschlüsse:
	+12V:					+12 / GND
	Benutzung Eingang S1:	MUX A und MUX B auf GND legen (=LOW)
	Anschluß PT1000:		S1 / GND
	Ausgang 0-6V:			Out / GND

	Alle GND sind miteinander verbunden.

Arduino Eingang für Analog 0-6 V
	A7	= pin 19  (Beschriftung A0)		Yellow
	GND	= pin 28						Green
	AREF mit 3V3 verbinden für 3.3V Ref

PT1000 Kalibrierung:
	USED			
	-50  > 0 mV		
	350  > 3300 mV	
	8.25x + 412.5		

	-50C = 803.15  Ohm =>  0V
	-30  = 882
	-20  = 921


	0.167 V		Output mit -30.059 C Wiederstand		= 0.882 kOhm
	3.06  V		Output mit 347.95  C Wiederstand		= 3.29  kOhm


TTL connections:
	GC_Prepare		=	D12 IN				Active State: OFF = TTL low
	GC_Ready		=	D11 OUT and IN		Active State: ON  = TTL high
	GC_Start		=	D10 IN				Active State: OFF = TTL low
	TRAP_Cool		=	D09 OUT				Active State: ON  = TTL high

TTL connections since V2.0
	Prepare_2		=	D8 IN				Active State: OFF = TTL low		PAL TTL OUT 3 (pin 6)

	Unused_IN_2		=	D7 IN												PAL TTL OUT 2 (pin 5)
	Unused_IN_1		=	D6 IN												PAL TTL OUT 1 (pin 4)	
	Unused_OUT_3	=	D5 OUT												PAL TTL IN 3 (pin 3)
	Unused_OUT_2	=	D4 OUT												PAL TTL IN 2 (pin 2)
	Unused_OUT_1	=	D2 OUT												PAL TTL IN 1 (pin 1)
			
	
LED : D13 OUT


eTrap Program:  V 1.9
							/	Befehl					/	Value

1.							/	SET_TEMP				/	standby_Temp			(Just set it)
2.							/	Wait for GC_Prepare		/	LOW						STATUS  WAIT_SIGNAL signal
3.							/	Set GC_Ready			/	not Ready
4.							/	Set TRAP_Cool			/	ON
5.							/	Wait for Temp			/	Low_Temperature			(Wait for it:  = Set STATUS  WAIT_TEMP temp)
6.							/	Wait TimeSpan (Timer 1)	/	Pre_Injection_Low_Time	STATUS  WAIT_TIME time
7.							/	Set GC_Ready			/	Ready
8.							/	Wait for GC_Start		/	Start					STATUS  WAIT_SIGNAL signal
9.							/	Wait TimeSpan (Timer 1)	/	Post_Injection_Low_Time	STATUS  WAIT_TIME time
10.							/	Set TRAP_Cool			/	OFF
11.							/	Start Timer				/	2						STATUS	TIMER_RUNNING  timer
12.							/	Set Temp				/	High_Temperature		
13.							/	Wait for Timer 2		/	High_Temperature_Time	STATUS	WAIT_TIMER	
restart the Cycle


eTrap Program:  V 2.1
Macro v 3.0
		/	Befehl						/	Parm 1							/	Parm 2				/	Parm 3
0;		ATOM[Line] = SET_VARIABLE;		PARM1[Line] = PAL_INCUBATION_TIME;	PARM2[Line] = 45;		PARM3[Line] = 0;		// 0 unused !
1;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = TRAP_COOL;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 1 Security
2;		ATOM[Line] = SET_TEMP;			PARM1[Line] = 30;					PARM2[Line] = 99;		PARM3[Line] = 0;		// 2 Set Standby Temp
																															( > SETUP_STANDBY_TEMPERATURE = PARM1[Line]; )

3;		ATOM[Line] = WAIT_SYNC_SIG;		PARM1[Line] = GC_PREPARE;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 3 Wait for GC Prepare
4;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = GC_READY;				PARM2[Line] = OFF;		PARM3[Line] = 0;		// 4 GC Ready to OFF

5;		ATOM[Line] = WAIT_SYNC_SIG;		PARM1[Line] = PREPARE_2;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 5 Wait for Prepare 2 (from PAL )
		
6;		ATOM[Line] = SET_TEMP;			PARM1[Line] = 30;					PARM2[Line] = 1;		PARM3[Line] = 0;		// 6 Security Temp = Standby Temp

7;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = TRAP_COOL;			PARM2[Line] = ON;		PARM3[Line] = 0;		// 7 Cool Trap ON
8;		ATOM[Line] = SET_TEMP;			PARM1[Line] = -5;					PARM2[Line] = 1;		PARM3[Line] = 0;		// 8 Low Temp

9;		ATOM[Line] = WAIT_TIMER;		PARM1[Line] = 0;					PARM2[Line] = 30;		PARM3[Line] = 0;		// 9 Pre Inject Low Time
10;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = GC_READY;				PARM2[Line] = ON;		PARM3[Line] = 0;		// 10 Set GC to Ready

11;		ATOM[Line] = WAIT_SYNC_SIG;		PARM1[Line] = GC_START;				PARM2[Line] = OFF;		PARM3[Line] = 0;		// 11 Wait GC Start

12;		ATOM[Line] = WAIT_TIMER;		PARM1[Line] = 0;					PARM2[Line] = 5;		PARM3[Line] = 0;		// 12 Post Inject Low Time
13;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = TRAP_COOL;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 13 Cool Trap OFF

14;		ATOM[Line] = SET_TEMP;			PARM1[Line] = 60;					PARM2[Line] = 1;		PARM3[Line] = 0;		// 14 High Temp				exchange Pos High Temp / Start Timer
15;		ATOM[Line] = START_TIMER;		PARM1[Line] = 1;					PARM2[Line] = 0;		PARM3[Line] = 0;		// 15 Start Timer High Temp

16;		ATOM[Line] = WAIT_TIMER;		PARM1[Line] = 1;					PARM2[Line] = 90;		PARM3[Line] = 0;		// 16 Wait Timer High Temp Is already Started
		
17;		ATOM[Line] = END_OF_CYCLE;		PARM1[Line] = 0;					PARM2[Line] = 0;		PARM3[Line] = 0;		// 17 END_OF_CYCLE  NEW Parm: Parm1 Restart no/yes
																															// read during Setup and sets   SETUP_AUTOSTART

eTrap Program:  V 2.2
Macro v 4.0
		/	Befehl						/	Parm 1							/	Parm 2				/	Parm 3
0;		ATOM[Line] = SET_VARIABLE;		PARM1[Line] = PAL_INCUBATION_TIME;	PARM2[Line] = 45;		PARM3[Line] = 0;		// 0 unused !
1;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = TRAP_COOL;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 1 Security
2;		ATOM[Line] = SET_TEMP;			PARM1[Line] = 30;					PARM2[Line] = 99;		PARM3[Line] = 0;		// 2 Set Standby Temp
																															( > SETUP_STANDBY_TEMPERATURE = PARM1[Line]; )
3;		ATOM[Line] = WAIT_SYNC_SIG;		PARM1[Line] = GC_PREPARE;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 3 Wait for GC Prepare
NEU 4;		ATOM[Line] = WAIT_SYNC_SIG;		PARM1[Line] = PREPARE_2;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 4	old 5 Wait for Prepare 2 (from PAL )
NEU 5;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = GC_READY;				PARM2[Line] = OFF;		PARM3[Line] = 0;		// 5	old 4 GC Ready to OFF
NEU 6;		ATOM[Line] = SET_TEMP;			PARM1[Line] = 30;					PARM2[Line] = NEU 10 alt 1;		PARM3[Line] = 0; // 6 Security Temp = Standby Temp  ( Security:Max. 40 Tol 10,  sonst Standby Tol 10)
7;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = TRAP_COOL;			PARM2[Line] = ON;		PARM3[Line] = 0;		// 7 Cool Trap ON
8;		ATOM[Line] = SET_TEMP;			PARM1[Line] = -5;					PARM2[Line] = 1;		PARM3[Line] = 0;		// 8 Low Temp
9;		ATOM[Line] = WAIT_TIMER;		PARM1[Line] = 0;					PARM2[Line] = 30;		PARM3[Line] = 0;		// 9 Pre Inject Low Time
10;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = GC_READY;				PARM2[Line] = ON;		PARM3[Line] = 0;		// 10 Set GC to Ready
11;		ATOM[Line] = WAIT_SYNC_SIG;		PARM1[Line] = GC_START;				PARM2[Line] = OFF;		PARM3[Line] = 0;		// 11 Wait GC Start
12;		ATOM[Line] = WAIT_TIMER;		PARM1[Line] = 0;					PARM2[Line] = 5;		PARM3[Line] = 0;		// 12 Post Inject Low Time
13;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = TRAP_COOL;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 13 Cool Trap OFF
14;		ATOM[Line] = SET_TEMP;			PARM1[Line] = 60;					PARM2[Line] = 1;		PARM3[Line] = 0;		// 14 High Temp				exchange Pos High Temp / Start Timer
15;		ATOM[Line] = START_TIMER;		PARM1[Line] = 1;					PARM2[Line] = 0;		PARM3[Line] = 0;		// 15 Start Timer High Temp
16;		ATOM[Line] = WAIT_TIMER;		PARM1[Line] = 1;					PARM2[Line] = 90;		PARM3[Line] = 0;		// 16 Wait Timer High Temp Is already Started		
17;		ATOM[Line] = END_OF_CYCLE;		PARM1[Line] = 0;					PARM2[Line] = 0;		PARM3[Line] = 0;		// 17 END_OF_CYCLE  NEW Parm: Parm1 Restart no/yes

eTrap Program:  V 2.5
Macro v 5.0

		0;		ATOM[Line] = SET_VARIABLE;		PARM1[Line] = PAL_INCUBATION_TIME;	PARM2[Line] = 45;		PARM3[Line] = 0;		// 0 
		1;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = TRAP_COOL;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 1 Security
		2;		ATOM[Line] = SET_TEMP;			PARM1[Line] = 50;					PARM2[Line] = 99;		PARM3[Line] = 0;		// 2 Standby Temp
		3;		ATOM[Line] = WAIT_SYNC_SIG;		PARM1[Line] = GC_PREPARE;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 3 Wait for GC Prepare
		// V 4 change Order
		4;		ATOM[Line] = WAIT_SYNC_SIG;		PARM1[Line] = PREPARE_2;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 4 Wait PREPARE_2 going low
		5;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = GC_READY;				PARM2[Line] = OFF;		PARM3[Line] = 0;		// 5 GC Ready to OFF		
		6;		ATOM[Line] = SET_TEMP;			PARM1[Line] = 50;					PARM2[Line] = 99;		PARM3[Line] = 0;		// 6 Security Temp = Standby Temp Do NOT Wait
		7;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = TRAP_COOL;			PARM2[Line] = ON;		PARM3[Line] = 0;		// 7 Cool Trap ON
		8;		ATOM[Line] = SET_TEMP;			PARM1[Line] = -5;					PARM2[Line] = 1;		PARM3[Line] = 0;		// 8 Low Temp
		9;		ATOM[Line] = WAIT_TIMER;		PARM1[Line] = 0;					PARM2[Line] = 30;		PARM3[Line] = 0;		// 9 Pre Inject Low Time
		10;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = GC_READY;				PARM2[Line] = ON;		PARM3[Line] = 0;		// 10 Set GC to Ready
		11;		ATOM[Line] = WAIT_SYNC_SIG;		PARM1[Line] = GC_START;				PARM2[Line] = OFF;		PARM3[Line] = 0;		// 11 Wait GC Start
		12;		ATOM[Line] = WAIT_TIMER;		PARM1[Line] = 0;					PARM2[Line] = 5;		PARM3[Line] = 0;		// 12 Post Inject Low Time
		13;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = TRAP_COOL;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 13 Cool Trap OFF
		14;		ATOM[Line] = SET_TEMP;			PARM1[Line] = 60;					PARM2[Line] = 1;		PARM3[Line] = 0;		// 14 High Temp
		15;		ATOM[Line] = START_TIMER;		PARM1[Line] = 1;					PARM2[Line] = 0;		PARM3[Line] = 0;		// 15 Start Timer High Temp
		16;		ATOM[Line] = WAIT_TIMER;		PARM1[Line] = 1;					PARM2[Line] = 90;		PARM3[Line] = 0;		// 16 Wait Timer High Temp Is already Started
		17;		ATOM[Line] = END_OF_CYCLE;		PARM1[Line] = SINGLE_RUN_MODE;		PARM2[Line] = 0;		PARM3[Line] = 0;		// 17 End of Cycle AND SINGLE_RUN_MODE-flag in PARM1 default=true

eTrap Program:  V 2.7
Macro v 6.0
// Cycle version 6	Line 4 added:  Wait for Prepare_2 Time.  If Prepare_2 Time >0: Do NOT run Line 5 !
		0;		ATOM[Line] = SET_VARIABLE;		PARM1[Line] = PAL_INCUBATION_TIME;	PARM2[Line] = 45;		PARM3[Line] = 0;		// 0 
		1;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = TRAP_COOL;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 1 Security
		2;		ATOM[Line] = SET_TEMP;			PARM1[Line] = 50;					PARM2[Line] = 99;		PARM3[Line] = 0;		// 2 Standby Temp
		3;		ATOM[Line] = WAIT_SYNC_SIG;		PARM1[Line] = GC_PREPARE;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 3 Wait for GC Prepare

		4;		ATOM[Line] = WAIT_TIMER;		PARM1[Line] = 0;					PARM2[Line] = 30;		PARM3[Line] = 0;		// 4 optional Prepare_2 Timer

		4;		ATOM[Line] = WAIT_SYNC_SIG;		PARM1[Line] = PREPARE_2;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 4 5 Wait PREPARE_2 going low
		5;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = GC_READY;				PARM2[Line] = OFF;		PARM3[Line] = 0;		// 5 6 GC Ready to OFF		
		6;		ATOM[Line] = SET_TEMP;			PARM1[Line] = 50;					PARM2[Line] = 99;		PARM3[Line] = 0;		// 6 7 Security Temp = Standby Temp Do NOT Wait
		7;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = TRAP_COOL;			PARM2[Line] = ON;		PARM3[Line] = 0;		// 7 8 Cool Trap ON
		8;		ATOM[Line] = SET_TEMP;			PARM1[Line] = -5;					PARM2[Line] = 1;		PARM3[Line] = 0;		// 8 9 Low Temp
		9;		ATOM[Line] = WAIT_TIMER;		PARM1[Line] = 0;					PARM2[Line] = 30;		PARM3[Line] = 0;		// 9 10 Pre Inject Low Time
		10;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = GC_READY;				PARM2[Line] = ON;		PARM3[Line] = 0;		// 10 11 Set GC to Ready
		11;		ATOM[Line] = WAIT_SYNC_SIG;		PARM1[Line] = GC_START;				PARM2[Line] = OFF;		PARM3[Line] = 0;		// 11 12 Wait GC Start
		12;		ATOM[Line] = WAIT_TIMER;		PARM1[Line] = 0;					PARM2[Line] = 5;		PARM3[Line] = 0;		// 12 13 Post Inject Low Time
		13;		ATOM[Line] = SWITCH_EVENT;		PARM1[Line] = TRAP_COOL;			PARM2[Line] = OFF;		PARM3[Line] = 0;		// 13 14 Cool Trap OFF
		14;		ATOM[Line] = SET_TEMP;			PARM1[Line] = 60;					PARM2[Line] = 1;		PARM3[Line] = 0;		// 14 15 High Temp
		15;		ATOM[Line] = START_TIMER;		PARM1[Line] = 1;					PARM2[Line] = 0;		PARM3[Line] = 0;		// 15 16 Start Timer High Temp
		16;		ATOM[Line] = WAIT_TIMER;		PARM1[Line] = 1;					PARM2[Line] = 90;		PARM3[Line] = 0;		// 16 17 Wait Timer High Temp Is already Started
		17;		ATOM[Line] = END_OF_CYCLE;		PARM1[Line] = SINGLE_RUN_MODE;		PARM2[Line] = 0;		PARM3[Line] = 0;		// 17 18 End of Cycle AND SINGLE_RUN_MODE-flag in PARM1 default=true




Version 1.2
- fake Sync Signals by replacing Signal with waiting 5 seconds.
- Get Firmware of Controler's EEprom.
- Save Cycle in Controler EEprom
- find correct COM automatically (tested with PAL at other COM)
- Update Controler Firmware manually (XFirmwareUpdate.exe)
- Graphic Method page
- Cryo Timeout :  after x min. Stop Cool_Trap but do not set out the GC_Ready

Version 1.3
- Cyro Timeout Ignore chkBox added.

Version 1.5
- fix some installation problems (COM)  and change name of USB Driver


Version 1.7   for eTrap 1.4
- added Start/Stop Cycles Button
- 

Version 1.8		for eTrap 1.4
removed Bugs:
	PAL Incubation Time save/load buggy:  change Syntax to SET_VARIABLE( PAL_INCUBATION_TIME, PAL Incubation Time (s),25)) 
											to fit into existing Syntax!

Version 1.9		for eTrap 1.4
	Add "Don't wait for GC Prepare"  Option in GUI and eTrap FW 1.9		NOT RUNNING  USE 1.8 !
	
	Save/Load reworked. Status ??

TEST:  FW 1.8  2 Änderungen für  GC_Prepare = 0  always !  For Michael


Version 2.1.1.10		for eTrap 2.1	for Macros 3.0
Enhanced:
	- Graphic Method page  with blinking lines
	- make fake Temperature up/down to check without hardware
	- load current Cycle of the Controller directly after Start in Method Page
	- Statusanzeige, die dem User genau mitteilt, was die Trap gerade macht und in welchem Modus sie sich befindet.

	- PREPARE 2 for starting the Cooling  (Prepare 1: just blocks GC ready)
	- No PAL Incubation Time
	- Single Run Mode  and  Cycle Mode added

Fixed:
	1. e-Trap Methoden bleiben nur solange gespeichert, wie die SW offen ist. Wird sie neu gestartet, 
		ist die Methode zwar noch da, aber mit anderen Werten.
	2. Beim Eigeben eines Wertes ins Feld "Incubation Time" und nachfogender "Enter"-Taste, springt der Wert zurück auf 30 sec. 
		Der neue Wert wird nur durch drücken des "Save" buttons übernommen.
	3. Beim Neustart der SW wird keine Verbindung zum Controler aufgebaut, d.h. alle Parameter stehen auf "0", die aktuelle Temperatur ebenfalls. 
		Erst nach Schließen und erneutem Starten klappt es. Manchmal muß der Controler neu gestartet werden.
	4. Während die trap im cycle ist, z. B. noch die "Heiß-Zeit" runterzählt, ist es nicht möglich, durch "Stop Cycle" zu stoppen, SW hängt sich auf.


Versin 2.2.1.x			for eTrap 2.2	for Macros 4.0
Enhanced:
	chg PAL Cycle: Prepare and Prepare_2 direkt nacheinander. Dann erst GC_Ready blockieren
	add CheckBox don't wait for Prepare_2 Signal. Standard = TRUE
	Add Help function

Version 2.2.2.x			for eTrap 2.2	for Macros 4.0
Enhanced:
	for MH Integration: add an Used/Unused option to icaddon.mac and eTrap.mac

Version 2.2.3.6	rel.!		for eTrap 2.2	for Macros 4.0
Enhanced:
	"Don't use Prepare_2"	saved in Configfile 
	"eTrap in Use"			shows up in Method Page at "Single Run Mode" position
	"eTrap NOT CONNECTED	shows up in Method Page at "Single Run Mode" position
	Temperature "Failed"	shows up in method Page if Temperature>360 C


Version 2.2.4				for eTrap 2.2	for Macros 4.0
	5.12.16 Started with "Check Firmware version". Automatic Update to recommended version. DONE

---------------------------- NEW FW 2.3     ------------------
version 2.3.1				for eTrap 2.3	for Macros 4.0
	7.12.16		ETrap Firmware 2.3: added currentTemperatureRAW, which is calculated to currentTemperature by empiric functions.
							currentTemperature sent to PC.  currentTemperatureRAW sent as _i_error !
	9.12.16		added Temperature Corrections 'Offset' and 'Slope'  for Service Technicians and Trap Setup.

---------------------------- NEW FW 2.4     ------------------
version 2.4.1				for eTrap 2.4	for Macros 4.0
	2.6.17		eTrap FW 2.4 comes in two versions: 
				"2.4_BrukerVarianGC"	GC_READY used to start the PAL TTL In1 
										GC_READY is always low . 
										If waiting for Inject, GC_READY set to HIGH, sending the Ready to PAL (TTL IN High)
										After Injection Signal GC_READY set back to low
										Needs a Bruker/PAL Cable!

				"2.4"					GC_READY used to Set the AT GC to NOT Ready 
										GC_READY is always high.
										After Prepare signal, GC_READY is set to low, sending a NOT Ready to the GC
										After reaching the Cool Temp. GC_READY set to low, sending a Ready to the GC
										Needs the Std GC and PAL Cables for AT GCs
version 2.5.1				for eTrap 2.5	for Macros 5 !
	23.8.17		changed the Standby Temp. to NO LImits. and Cool Down without wait for secure Temp.
				Macro version chg to 5
	1.12.17		- removed bug: In Debug (started from VS2017) the Software version is not read ('cause it reads App Deployment Version)
								Set the version manually in this case
				- checkBox "fake Sync Signals" will set fake_GC_Start and sends "fakeSyncSignals" to Trap 
				  If fakeSyncSignals is set then Trap will just wait 10 sec and the simulate the GC-START signal.

version 2.7.2	for eTrap 2.7	Macros  V 6 !
	13.6.2018	- Splash Screen added
				- Support for old (slow) and new (fast released 03/18) Arduino Nano FW Update
				- Prepare_2_Timer
				- Burn FW manually
				- Trap Counter (resetable) and Instrument Counter (not resetable).
				- NEW  variable: Vars.IsBrukerDesign  !
				- Colors are CT or Bruker Colors 
				- Installation Folder Chromtech\eTrap   bzw.   Bruker PeakTrap\
	Bugs:	- Meldung Connected to eTrap > PeakTrap	
			- Desktop Icon: PeakTrap Driver
			- PeakTrap Method  (default)  default weiter nach links(6 spaces)

version "2.8 progress"	for eTrap 2.8	(same as 2.7)
	27.3.2019	- fixed COM Problems with some PCs:
				- COM ports checked from High to low number
				- added 5 Exclude Keywords to eTrap Configuration.txt:  Exclude1=COM1
				- excluded COM ports will not be checked!
				- fixed FW Update problem with old bootloaders
				Add variable CryoTimeout. Only Var. no function now

				
version 2.8.2  for eTrap 2.8.2
	19.10.2020	- Add STOP command from MH:
					... sethook "IC_PostAcq", "eT_Abort" in User.mac
					... eT_Send "Stop" in eTrap.mac

			1. Initial Config File in C:\Chromtech\eTrap\Program   After  installation
			2. Standard Config File in C:\Chromtech\eTrap\		 After first startup

			- use and Unused are Method parameters now: 'eTrap In Use' 
				- eTrap_In_Use will NOT be sent to Controler
				- On Start a Method w/ eTrap_In_Use: Just no start is sent to controler
			- CryoTimeout in Controler changed to ONLY be checked during cool down. NOt during wait start!
			- Controler version 2.8.2.  
			- Save macro in same Folder as method (in case of MH it was the method folder OR method)
			- On Shutdown: Apply Heaters OFF!
			- On Startup: Check if already runnning
			- Add logging to MSD Logfile
			- Add writing Parameters to acqmeth.txt  or  'methname'.INF
version 2.8.3  for eTrap 2.8.2
	2.12.2020	- removed bug: Not Writing Config File !!!
				- each change of a configuration (Ignore GC Prep, Ingnore Prepare_2) will be saved in Config file immediately


			
Version 3.0
	13.1.2021  Moved to new SSB: SSB_V3.txt

			 

										

O P E N
BUG: Cryo Timeout Meldung geht nicht weg
prinzipielles Problem:	PAL wartet auf GC ready go to LOW. 
						Wenn eTrap hängt, dann ist GC-Ready IMMER low. Ausser im Cool-Down)


5. Permament Alert on Method page, if Ignore Cryo Timeout is active
6. Select own Cyro Timeout Times (with display in Method Page)
- Ignore GC_Prepare hier einfügen und FW wertet entsprechend aus (Kompatibilität zu FW 1.8)
7. EEPROM write/read ersetzen gegen get/put.  Get/Put schreiben nur, wenn der Wert ein anderer ist
												Lebensdauer des EEPROM...




Ändern des Cycle:
DataLogging:	Do_CreateTrapCycle(),  Do_SendParms(changeVariables)
ChartForm:		Do_DrawMethodLines()  directly called from  Form  ChartForm.eTrapDisplayBox
Datenklasse:	Do_eTrapDisplayString

eTrap Firmware:
OnParmsToControler() case pChangeVariables
eeRestoreCycle
eeSaveCycle

Build in Chromtech\eTrap						bzw.  Bruker\Peak Trap\:
1.  in '5-DataLogging' Publish \ Publish Location eintragen:
	C:\Chromtech\eTrap\program\					bzw.   C:\Bruker PeakTrap\Program\
2.	in '5-DataLogging' Publish \ Install Mode and Settings \ Options-Button:
	Description:
	 Publisher Name:	Chromtech				bzw.	Bruker
	 Suite Name:		eTrap Controler			bzw.	PeakTrap Controler
	 Product Name:		eTrap Controler			bzw.	PeakTrap controler
	
3.	in '5-DataLogging' Application \  Assembly Information Button:
	Title:		Chromtech Controler				bzw.	Bruker PeakTrap
	Product:	Chromtech Controler				bzw.	Bruker PeakTrap
	Copyright:	Copyright© Chromtech 2018		bzw.	Copyright 2018

4.  in '5-DataLogging' Application \  Assembly Icon Browse Button:
	Icon_rgb_neg.ico							bzw.	CmdMessenger\logo_rgb_300dpi.ico
